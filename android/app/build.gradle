apply plugin: "com.android.application"

import com.android.build.OutputFile



apply from: "../../node_modules/react-native/react.gradle"


def enableSeparateBuildPerCPUArchitecture = false

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = false

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.myapp"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
//        manifestPlaceholders = [
//                JPUSH_APPKEY: "ffeb102c8bf8ec5a1a98e708",
//                APP_CHANNEL: "developer-default"
//        ]
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }

    signingConfigs {//签名配置
        release {//发布版签名配置
            storeFile file('D:/TestRNproject/myapp/android/app/mysigned.jks')//密钥文件路径
            storePassword 'myapp123'//密钥文件密码
            keyAlias 'myapp'//key别名
            keyPassword 'myapp123'//key密码
        }
        debug {//debug版签名配置
//            storeFile file('D:/TestRNproject/myapp/android/app/mysigned.jks')//密钥文件路径
//            storePassword 'myapp123'//密钥文件密码
//            keyAlias 'myapp'//key别名
//            keyPassword 'myapp123'//key密码
        }
    }
    buildTypes {
        release {//发布
            minifyEnabled false//混淆开启
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'//指定混淆规则文件
            signingConfig signingConfigs.release//设置签名信息
        }
        debug {//调试
//            signingConfig signingConfigs.release
        }
//        release {
//            minifyEnabled enableProguardInReleaseBuilds
//            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
//        }
    }
    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a":1, "x86":2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.facebook.react:react-native:+'
     compile 'com.yanzhenjie:permission:1.0.3'
    //https://github.com/yanzhenjie/AndPermission
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile project(':jpush-react-native')
    compile project(':jcore-react-native')
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}
